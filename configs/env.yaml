# Environment Configuration for Zelda Oracle of Seasons

# ROM configuration
rom:
  path: "roms/zelda_oracle_of_seasons.gbc"  # Path to ROM file (user must provide)
  verify_checksum: true
  required_checksum: null  # Set to specific checksum if validation needed

# Emulator settings
emulator:
  headless: true  # Run without display
  frame_skip: 4   # Number of frames to skip between actions
  speed_multiplier: 1.0  # Emulation speed (1.0 = normal speed)

  # Display settings (if not headless)
  window_type: "SDL2"  # "SDL2", "OpenGL"
  scale_factor: 2

  # Audio settings
  enable_audio: false
  audio_sample_rate: 44100

# State observation configuration
observation:
  # State encoding
  vector_size: 128  # Size of observation vector
  normalize: true   # Normalize observations to [0, 1]

  # RAM observation
  include_ram_addresses:
    - 0xD300  # Player X
    - 0xD301  # Player Y
    - 0xD302  # Player direction
    - 0xD303  # Current room
    - 0xD304  # Health
    - 0xD305  # Max health
    - 0xD310  # Rupees (low byte)
    - 0xD311  # Rupees (high byte)
    - 0xD312  # Keys
    - 0xD340  # Current season

  # Tile observation
  include_tilemap: true
  tilemap_radius: 3  # Tiles around player to include

  # Structured state for LLM
  full_state_for_planner: true
  
  # Visual processing for LLM (NEW)
  enable_visual_processing: true
  visual:
    target_image_size: [160, 144]  # Width, height for processing
    enable_computer_vision: true   # Basic sprite/element detection
    include_screen_description: true
    compress_visual_data: true     # Compress images for API efficiency

# Action space configuration
actions:
  # Available actions (all Game Boy buttons)
  available_actions:
    - "NOP"
    - "UP"
    - "DOWN"
    - "LEFT"
    - "RIGHT"
    - "A"
    - "B"
    - "START"
    - "SELECT"

  # Action timing
  button_hold_frames: 1
  button_release_frames: 1

# Reward configuration
reward_structure:
  # Immediate rewards
  rupee_collection: 0.01
  key_collection: 0.5
  item_collection: 0.3
  heart_collection: 1.0

  # Progress rewards
  boss_defeat: 2.0
  essence_collection: 5.0
  dungeon_completion: 10.0

  # Penalties
  death: -3.0
  health_loss: -0.1
  time_penalty: -0.0001

  # Exploration rewards
  new_room_discovery: 0.1
  movement: 0.001

  # Interaction rewards
  switch_activation: 0.05
  door_unlock: 0.2
  chest_opening: 0.5

# Episode configuration
episode:
  max_steps: 10000

  # Termination conditions
  terminate_on:
    death: true
    game_complete: true
    stuck_too_long: true

  # Reset conditions
  reset_on_episode_end: true

  # Starting conditions
  start_from_save_state: false
  save_state_path: null

# Memory addresses for specific tracking
memory_tracking:
  # Player state
  player_x: 0xD300
  player_y: 0xD301
  player_direction: 0xD302
  player_room: 0xD303
  player_health: 0xD304
  player_max_health: 0xD305

  # Resources
  rupees: [0xD310, 0xD311]  # 2-byte little endian
  keys: 0xD312

  # Equipment
  sword_level: 0xD313
  shield_level: 0xD314

  # Items (bit flags)
  inventory: [0xD320, 0xD321, 0xD322]

  # Season state
  current_season: 0xD340
  season_spirits: 0xD341

  # Dungeon progress
  dungeon_keys: 0xD330
  boss_keys: 0xD331
  dungeon_map: 0xD332
  dungeon_compass: 0xD333

  # Game flags
  game_flags_start: 0xD400
  game_flags_end: 0xD4FF

# Logging configuration
logging:
  log_level: "INFO"
  log_state_changes: true
  log_rewards: true
  log_actions: false  # Can be verbose

  # Performance logging
  log_fps: true
  log_step_time: false

# Debug configuration
debug:
  enable_debug_mode: false
  debug_overlay: false
  save_screenshots: false
  screenshot_frequency: 1000

  # State debugging
  print_state_summary: false
  validate_state_consistency: true

# Performance optimization
performance:
  # Multithreading
  use_multiprocessing: false
  num_workers: 1

  # Memory management
  state_cache_size: 1000
  clear_cache_frequency: 10000

  # Frame optimization
  skip_identical_frames: true
  compress_states: false

  # LLM Planner Integration (Vision Hybrid RL+LLM)
  # This enables the multimodal LLM to receive screenshots and provide strategic guidance
  planner_integration:
    use_planner: true  # Enable LLM guidance
    enable_visual: true  # Send screenshots to vision-capable LLM
    use_structured_entities: true  # Include detailed game state in prompt
    auto_load_save_state: true  # Load save state to skip intro
  
  # LLM call frequency and rewards
  llm_frequency: 10  # Call vision LLM every 10 steps (reduced for demo to avoid overwhelming LLM)
  alignment_bonus_multiplier: 2.0  # Reward when PPO action matches LLM suggestion
  
  # Vision settings (for screenshot capture)
  image_scale: 2  # 2x upscale (320Ã—288) for better LLM understanding
  image_quality: 75  # JPEG quality (75% balances size and clarity)
  image_format: "jpeg"  # JPEG is smaller than PNG for API efficiency
  
  # LLM endpoint (from environment variable)
  llm_endpoint_env_var: "LLM_ENDPOINT"  # Read from $LLM_ENDPOINT
  
  # LLM model name (if empty, don't send model parameter)
  llm_model_name: ""  # Leave empty to use server default, or specify model name
  
  # Prompt config path
  vision_prompt_config: "configs/vision_prompt.yaml"  # Vision-specific prompts and rewards